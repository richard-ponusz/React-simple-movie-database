{"version":3,"sources":["SimpleMovieSite/service/api.js","config/APIconfig.js","SimpleMovieSite/service/service.js","SimpleMovieSite/shared/reusable_components/Input.jsx","SimpleMovieSite/components/MainHeader.jsx","SimpleMovieSite/components/MainFooter.jsx","SimpleMovieSite/types/MovieType.js","SimpleMovieSite/components/movies/RenderMovie.jsx","SimpleMovieSite/components/Movies.jsx","SimpleMovieSite/Site.jsx","App.jsx","index.js"],"names":["API","axios","create","baseURL","headers","getSearchedMovies","searchedMovie","get","params","query","then","data","results","catch","error","console","log","fetchPopularMovies","a","InputField","styled","input","Input","value","onChange","onKeyPress","placeholder","Container","div","Form","MainHeader","setMovies","useState","setSearchedMovie","handleServiceCall","handleResetSearch","foundMovies","type","name","e","target","keyEvent","key","MainFooter","MovieType","title","PropTypes","string","arrayOf","Movie","Poster","img","Title","p","RenderMovies","movie","src","poster_path","alt","MoviesList","Movies","movies","map","RenderMovie","id","renderMovies","Site","handleGetPopularMoviesCall","useEffect","App","styles","css","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.320a2d49.chunk.js","sourcesContent":["import axios from 'axios';\r\nimport APIBearerKey from '../../config/APIconfig';\r\n\r\n/** Use your API key here, More about this: in the Readme.md*/\r\nconst accessToken = APIBearerKey;\r\n\r\n/**\r\n * Connects to the Movie DB \r\n */\r\nconst API = axios.create({\r\n  baseURL: 'https://api.themoviedb.org/3',\r\n  headers: {\r\n    'Authorization': `Bearer ${accessToken}`,\r\n  }\r\n});\r\n\r\nexport default API;\r\n","const APIBearerKey = 'eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJlODU3OWQ1YTE2OTEwOTRmNDUxMzhiMWJiMGJkYmVhNiIsInN1YiI6IjVlY2I3NDJiOGUyZTAwMDAyMDI3NTVhZiIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.zU3UMOfwGYqImQ3D1uqd1g-bwyg1bgI-mr-dTHkv3nM';\r\n\r\nexport default APIBearerKey;\r\n","import API from './api';\r\n\r\n/**\r\n * Handles API call to the MovieDB with the searched movie's title\r\n * \r\n * @param {string} searchedMovie, the searched Movie title\r\n * @returns {[movies]} returns an array of found movies\r\n */\r\nexport const getSearchedMovies = (searchedMovie) => {\r\n  return API.get(`/search/movie`, {\r\n    params: {\r\n      query: searchedMovie,\r\n    }\r\n  })\r\n    .then(({ data }) => {\r\n      return data.results;\r\n    }).catch(error => {\r\n      return console.log(error);\r\n    });\r\n};\r\n\r\n/**\r\n * Fetches the popular movies\r\n */\r\nexport const fetchPopularMovies = async () => {\r\n  return await API.get('/movie/popular').then(\r\n    ({ data }) => data.results\r\n  ).catch(error => console.log(error));\r\n}\r\n\r\n","import React from 'react';\r\nimport styled from '@emotion/styled';\r\n\r\nconst InputField = styled.input`\r\n  margin: 1rem;\r\n  padding: 0.8rem 1rem;\r\n  width: 20rem;\r\n  border-radius: 0.5rem;\r\n  box-shadow: none;\r\n`\r\n\r\nconst Input = ({ value, onChange, onKeyPress }) => {\r\n  return (\r\n    <InputField\r\n      placeholder=\"Type here to search for movies...\"\r\n      value={value}\r\n      onChange={onChange}\r\n      onKeyPress={onKeyPress}\r\n    />\r\n  )\r\n}\r\n\r\nexport default Input;\r\n","import { useState } from 'react';\r\nimport styled from '@emotion/styled';\r\n\r\nimport Input from '../shared/reusable_components/Input';\r\n\r\nimport { getSearchedMovies } from '../service/service';\r\n\r\nconst Container = styled.div`\r\n  height: 20rem;\r\n  background: linear-gradient(\r\n    rgba(0, 0, 0, 0.7),\r\n    rgba(0, 0, 0, 0.7)\r\n   ), \r\n   url('https://bgr.com/wp-content/uploads/2016/03/movies-tiles.jpg');\r\n`\r\n\r\nconst Form = styled.div`\r\n  height: 100%;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`\r\n\r\nconst MainHeader = ({ setMovies }) => {\r\n  const [searchedMovie, setSearchedMovie] = useState('');\r\n\r\n  /**a\r\n   * Calls the function the handles the async call for search movies\r\n   * \r\n   * @param {*} searchedMovie \r\n   */\r\n  const handleServiceCall = async (searchedMovie) => {\r\n    handleResetSearch();\r\n    const foundMovies = await getSearchedMovies(searchedMovie);\r\n    setMovies(foundMovies);\r\n  }\r\n\r\n  const handleKeyPress = (keyEvent) => {\r\n\r\n    if (keyEvent.key === \"Enter\") {\r\n      handleServiceCall(searchedMovie)\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Resets the searched movie\r\n   */\r\n  const handleResetSearch = () => {\r\n    setMovies('');\r\n  }\r\n\r\n\r\n  return (\r\n    <Container>\r\n      <Form>\r\n        <Input\r\n          type=\"text\"\r\n          name=\"search-movies__input\"\r\n          value={searchedMovie}\r\n          onChange={(e) => setSearchedMovie(e.target.value)}\r\n          onKeyPress={handleKeyPress}\r\n        />\r\n      </Form>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default MainHeader;\r\n","import styled from '@emotion/styled';\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  background: #34495e;\r\n  color: #fff;\r\n  padding: 1rem;\r\n  border-color: red;\r\n  border-top-left-radius: 0.2rem;\r\n  border-top-right-radius: 0.2rem;\r\n`\r\n\r\nconst MainFooter = () => (\r\n  <Container>\r\n    <span>** This is the footer text **</span>\r\n  </Container>\r\n)\r\n\r\nexport default MainFooter;\r\n","import PropTypes from \"prop-types\";\r\n\r\nconst MovieType = {\r\n  title: PropTypes.string,\r\n}\r\n\r\nconst MoviesType = {\r\n  movies: PropTypes.arrayOf(MovieType),\r\n}\r\n\r\nexport default [MovieType, MoviesType];\r\n","import styled from '@emotion/styled';\r\n\r\nimport MovieType from '../../types/MovieType'\r\n\r\nconst Movie = styled.div`\r\n  margin: 0 auto;\r\n  display: flex;\r\n  justify-content: center;\r\n  flex-flow: row wrap;\r\n`\r\n\r\nconst Poster = styled.img`\r\n  width: 12rem;\r\n  height: 17rem;\r\n`\r\n\r\nconst Title = styled.p`\r\n  width: 100%;\r\n  text-align: center;\r\n  color: #2c3e50;\r\n`\r\n\r\nconst RenderMovies = ({ movie }) => {\r\n  return (\r\n    <Movie>\r\n      <Poster src={`https://image.tmdb.org/t/p/original/${movie.poster_path}`} alt={`poster_${movie.title}`} />\r\n      <Title>{movie.title}</Title>\r\n    </Movie>\r\n  )\r\n}\r\n\r\nRenderMovies.propTypes = {\r\n  movie: MovieType,\r\n}\r\n\r\nexport default RenderMovies;\r\n","import MoviesType from '../types/MovieType';\r\nimport styled from '@emotion/styled/macro';\r\n\r\nimport RenderMovie from './movies/RenderMovie';\r\n\r\nconst Container = styled.div`\r\n  background-color: #ecf0f1;\r\n  padding: 1rem;\r\n`\r\n\r\nconst MoviesList = styled.div`\r\n  display: grid;\r\n  justify-content: center;\r\n  grid-template-columns: repeat(auto-fit, minmax(240px, 1fr));\r\n  grid-gap: 1rem;\r\n`\r\n\r\nconst Movies = ({ movies }) => {\r\n\r\n  const renderMovies = () => {\r\n    if (!movies) {\r\n      return;\r\n    }\r\n    return movies.map(movie => <RenderMovie movie={movie} key={movie.id} />)\r\n  }\r\n\r\n  return (\r\n    <Container>\r\n      {movies ? null : 'No movies searched for as of yet! Find the movie you are looking for!'}\r\n      <MoviesList>\r\n        {renderMovies()}\r\n      </MoviesList>\r\n    </Container>\r\n  )\r\n}\r\n\r\nMovies.propTypes = {\r\n  movies: MoviesType,\r\n}\r\n\r\nexport default Movies;\r\n","import { useEffect, useState } from 'react';\r\nimport styled from '@emotion/styled';\r\n\r\nimport { fetchPopularMovies } from './service/service';\r\nimport MainHeader from './components/MainHeader';\r\nimport MainFooter from './components/MainFooter';\r\nimport Movies from './components/Movies';\r\n\r\nconst Container = styled.div`\r\n  min-height: 100%;\r\n  display: grid;\r\n  grid-template-rows: auto 1fr auto;\r\n  grid-template-columns: 100%;\r\n  row-gap: 10px;\r\n  height: 100vh;\r\n`\r\n\r\nconst Site = () => {\r\n  const [movies, setMovies] = useState([]);\r\n\r\n  const handleGetPopularMoviesCall = async () => {\r\n    return await fetchPopularMovies();\r\n  }\r\n\r\n\r\n  useEffect(() => {\r\n    handleGetPopularMoviesCall()\r\n      .then(movies => setMovies(movies))\r\n      .catch(error => console.log(error));\r\n  }, []);\r\n\r\n  return (\r\n    <Container>\r\n      <MainHeader setMovies={setMovies} />\r\n      <Movies movies={movies} />\r\n      <MainFooter />\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Site;\r\n","import { Global, css } from '@emotion/react';\r\n\r\nimport Site from './SimpleMovieSite/Site';\r\n\r\nfunction App() {\r\n  return (\r\n    <div>\r\n      <Global\r\n        styles={css`\r\n        html, body {\r\n          height: 100%;\r\n          width: 100%;\r\n          margin: 0;\r\n          padding: 0;\r\n          background: url('https://i.pinimg.com/originals/ad/47/af/ad47af29ad50df1477b9413f9d521db0.jpg');\r\n          font-family: 'Roboto', sans-serif;\r\n        }\r\n\r\n        body {\r\n          max-width: 1280px;\r\n          margin: 0 auto;\r\n        }\r\n      `}\r\n      />\r\n      <Site />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}